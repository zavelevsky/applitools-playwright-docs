"use strict";(self.webpackChunkapplitools_playwright_docs=self.webpackChunkapplitools_playwright_docs||[]).push([[8349],{2248:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>o});var t=s(4848),a=s(8453);const i={},c="Eyes Object",r={id:"api/eyes-object",title:"Eyes Object",description:"The Eyes object is the main interface for the Applitools Eyes SDK. It provides methods for starting visual tests, taking screenshots, and comparing them against baselines.",source:"@site/docs/api/eyes-object.md",sourceDirName:"api",slug:"/api/eyes-object",permalink:"/applitools-playwright-docs/docs/api/eyes-object",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"api",next:{title:"Configuration",permalink:"/applitools-playwright-docs/docs/api/configuration"}},l={},o=[{value:"Importing the Eyes Object",id:"importing-the-eyes-object",level:2},{value:"Constructor",id:"constructor",level:2},{value:"<code>new Eyes(runner)</code>",id:"new-eyesrunner",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>open(page, appName, testName, viewportSize)</code>",id:"openpage-appname-testname-viewportsize",level:3},{value:"<code>check(name, target)</code>",id:"checkname-target",level:3},{value:"<code>close(throwEx)</code>",id:"closethrowex",level:3},{value:"<code>abort()</code>",id:"abort",level:3},{value:"<code>setApiKey(apiKey)</code>",id:"setapikeyapikey",level:3},{value:"<code>setMatchLevel(matchLevel)</code>",id:"setmatchlevelmatchlevel",level:3},{value:"<code>setBaselineEnvName(baselineEnvName)</code>",id:"setbaselineenvnamebaselineenvname",level:3},{value:"<code>setBatch(batch)</code>",id:"setbatchbatch",level:3},{value:"<code>addProperty(name, value)</code>",id:"addpropertyname-value",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>getIsOpen()</code>",id:"getisopen",level:3},{value:"<code>getApiKey()</code>",id:"getapikey",level:3},{value:"Example Usage",id:"example-usage",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"eyes-object",children:"Eyes Object"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Eyes"})," object is the main interface for the Applitools Eyes SDK. It provides methods for starting visual tests, taking screenshots, and comparing them against baselines."]}),"\n",(0,t.jsx)(n.h2,{id:"importing-the-eyes-object",children:"Importing the Eyes Object"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const { Eyes } = require('@applitools/eyes-playwright');\n"})}),"\n",(0,t.jsx)(n.h2,{id:"constructor",children:"Constructor"}),"\n",(0,t.jsx)(n.h3,{id:"new-eyesrunner",children:(0,t.jsx)(n.code,{children:"new Eyes(runner)"})}),"\n",(0,t.jsx)(n.p,{children:"Creates a new Eyes instance."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"runner"})," (optional): An instance of ",(0,t.jsx)(n.code,{children:"ClassicRunner"})," or ",(0,t.jsx)(n.code,{children:"VisualGridRunner"}),". If not provided, a ",(0,t.jsx)(n.code,{children:"ClassicRunner"})," will be created internally."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const eyes = new Eyes();\n// or\nconst runner = new VisualGridRunner();\nconst eyes = new Eyes(runner);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h3,{id:"openpage-appname-testname-viewportsize",children:(0,t.jsx)(n.code,{children:"open(page, appName, testName, viewportSize)"})}),"\n",(0,t.jsx)(n.p,{children:"Starts a test."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"page"}),": The Playwright ",(0,t.jsx)(n.code,{children:"Page"})," object to automate."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"appName"}),": The name of the application under test."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"testName"}),": The name of the test."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"viewportSize"})," (optional): An object specifying the viewport width and height."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Returns: A promise that resolves to the ",(0,t.jsx)(n.code,{children:"page"})," object."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"await eyes.open(page, 'My App', 'Homepage Test', { width: 1024, height: 768 });\n"})}),"\n",(0,t.jsx)(n.h3,{id:"checkname-target",children:(0,t.jsx)(n.code,{children:"check(name, target)"})}),"\n",(0,t.jsx)(n.p,{children:"Takes a screenshot and performs a checkpoint."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"}),": A name for the checkpoint."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"target"}),": The target of the check (e.g., ",(0,t.jsx)(n.code,{children:"Target.window()"}),")."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Returns: A promise that resolves when the check is complete."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"await eyes.check('Full Page', Target.window().fully());\n"})}),"\n",(0,t.jsx)(n.h3,{id:"closethrowex",children:(0,t.jsx)(n.code,{children:"close(throwEx)"})}),"\n",(0,t.jsx)(n.p,{children:"Closes the test and returns the results."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"throwEx"})," (optional): If true, throws an exception for failed tests. Default is true."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Returns: A promise that resolves to the test results."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const results = await eyes.close(false);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"abort",children:(0,t.jsx)(n.code,{children:"abort()"})}),"\n",(0,t.jsx)(n.p,{children:"Aborts the test."}),"\n",(0,t.jsx)(n.p,{children:"Returns: A promise that resolves when the abort is complete."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"await eyes.abort();\n"})}),"\n",(0,t.jsx)(n.h3,{id:"setapikeyapikey",children:(0,t.jsx)(n.code,{children:"setApiKey(apiKey)"})}),"\n",(0,t.jsx)(n.p,{children:"Sets the Applitools API key."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"apiKey"}),": Your Applitools API key."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"eyes.setApiKey('YOUR_API_KEY');\n"})}),"\n",(0,t.jsx)(n.h3,{id:"setmatchlevelmatchlevel",children:(0,t.jsx)(n.code,{children:"setMatchLevel(matchLevel)"})}),"\n",(0,t.jsx)(n.p,{children:"Sets the match level for subsequent checks."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"matchLevel"}),": The match level to use. Can be 'Strict', 'Exact', 'Content', or 'Layout'."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"eyes.setMatchLevel('Layout');\n"})}),"\n",(0,t.jsx)(n.h3,{id:"setbaselineenvnamebaselineenvname",children:(0,t.jsx)(n.code,{children:"setBaselineEnvName(baselineEnvName)"})}),"\n",(0,t.jsx)(n.p,{children:"Sets the baseline environment name."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"baselineEnvName"}),": The name of the baseline environment."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"eyes.setBaselineEnvName('Production');\n"})}),"\n",(0,t.jsx)(n.h3,{id:"setbatchbatch",children:(0,t.jsx)(n.code,{children:"setBatch(batch)"})}),"\n",(0,t.jsx)(n.p,{children:"Sets the batch for the test."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"batch"}),": A ",(0,t.jsx)(n.code,{children:"BatchInfo"})," object or a batch name string."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"eyes.setBatch(new BatchInfo('My Batch'));\n"})}),"\n",(0,t.jsx)(n.h3,{id:"addpropertyname-value",children:(0,t.jsx)(n.code,{children:"addProperty(name, value)"})}),"\n",(0,t.jsx)(n.p,{children:"Adds a custom property to the test."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"}),": The property name."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"value"}),": The property value."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"eyes.addProperty('Environment', 'Staging');\n"})}),"\n",(0,t.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(n.h3,{id:"getisopen",children:(0,t.jsx)(n.code,{children:"getIsOpen()"})}),"\n",(0,t.jsx)(n.p,{children:"Returns whether the Eyes instance is currently open."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const isOpen = eyes.getIsOpen();\n"})}),"\n",(0,t.jsx)(n.h3,{id:"getapikey",children:(0,t.jsx)(n.code,{children:"getApiKey()"})}),"\n",(0,t.jsx)(n.p,{children:"Gets the current API key."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const apiKey = eyes.getApiKey();\n"})}),"\n",(0,t.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,t.jsx)(n.p,{children:"Here's a complete example demonstrating the usage of the Eyes object:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const { chromium } = require('playwright');\nconst { Eyes, Target } = require('@applitools/eyes-playwright');\n\n(async () => {\n  const browser = await chromium.launch();\n  const page = await browser.newPage();\n  const eyes = new Eyes();\n\n  try {\n    eyes.setApiKey('YOUR_API_KEY');\n    await eyes.open(page, 'My App', 'Homepage Test', {\n      width: 1024,\n      height: 768,\n    });\n\n    await page.goto('https://example.com');\n\n    await eyes.check('Full Page', Target.window().fully());\n\n    await eyes.close();\n  } catch (error) {\n    console.error('Error:', error);\n  } finally {\n    await eyes.abort();\n    await browser.close();\n  }\n})();\n"})}),"\n",(0,t.jsx)(n.p,{children:"This example demonstrates opening a test, navigating to a page, performing a visual check, and closing the test."}),"\n",(0,t.jsxs)(n.p,{children:["For more detailed information about specific methods or advanced usage, please refer to other sections of this documentation or the ",(0,t.jsx)(n.a,{href:"https://applitools.com/docs/api/eyes-sdk/index-playwright",children:"Applitools Eyes SDK for Playwright API Reference"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>r});var t=s(6540);const a={},i=t.createContext(a);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);