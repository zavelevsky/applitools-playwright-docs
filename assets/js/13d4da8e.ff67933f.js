"use strict";(self.webpackChunkapplitools_playwright_docs=self.webpackChunkapplitools_playwright_docs||[]).push([[9807],{85:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var s=i(4848),t=i(8453);const a={},o="Advanced Usage of Applitools Eyes SDK with Playwright",r={id:"advanced-usage",title:"Advanced Usage of Applitools Eyes SDK with Playwright",description:"This guide covers advanced features and techniques for using Applitools Eyes with Playwright. These topics will help you create more sophisticated visual tests, handle complex scenarios, and optimize your testing process.",source:"@site/docs/advanced-usage.md",sourceDirName:".",slug:"/advanced-usage",permalink:"/applitools-playwright-docs/docs/advanced-usage",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Integration with Playwright",permalink:"/applitools-playwright-docs/docs/integration-with-playwright"},next:{title:"CI/CD Integration",permalink:"/applitools-playwright-docs/docs/ci-cd-integration"}},c={},l=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Advanced Check Methods",id:"advanced-check-methods",level:2},{value:"Handling Dynamic Content",id:"handling-dynamic-content",level:2},{value:"Working with Iframes",id:"working-with-iframes",level:2},{value:"Custom Viewport Sizes and Devices",id:"custom-viewport-sizes-and-devices",level:2},{value:"Using the Ultrafast Grid",id:"using-the-ultrafast-grid",level:2},{value:"Visual Locators",id:"visual-locators",level:2},{value:"Accessibility Testing",id:"accessibility-testing",level:2},{value:"Handling Popups and New Windows",id:"handling-popups-and-new-windows",level:2},{value:"Advanced Error Handling",id:"advanced-error-handling",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"advanced-usage-of-applitools-eyes-sdk-with-playwright",children:"Advanced Usage of Applitools Eyes SDK with Playwright"})}),"\n",(0,s.jsx)(n.p,{children:"This guide covers advanced features and techniques for using Applitools Eyes with Playwright. These topics will help you create more sophisticated visual tests, handle complex scenarios, and optimize your testing process."}),"\n",(0,s.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#configuration-options",children:"Configuration Options"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#advanced-check-methods",children:"Advanced Check Methods"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#handling-dynamic-content",children:"Handling Dynamic Content"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#working-with-iframes",children:"Working with Iframes"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#custom-viewport-sizes-and-devices",children:"Custom Viewport Sizes and Devices"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#using-the-ultrafast-grid",children:"Using the Ultrafast Grid"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#visual-locators",children:"Visual Locators"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#accessibility-testing",children:"Accessibility Testing"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#handling-popups-and-new-windows",children:"Handling Popups and New Windows"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#advanced-error-handling",children:"Advanced Error Handling"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,s.jsx)(n.p,{children:"You can customize Applitools Eyes behavior using various configuration options:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import { Configuration } from '@applitools/eyes-playwright';\n\nconst config = new Configuration();\nconfig.setApiKey('YOUR_API_KEY');\nconfig.setBatch({ name: 'Playwright Advanced Tests' });\nconfig.setMatchLevel('Layout');\nconfig.setStitchMode('CSS');\n\nconst eyes = new Eyes(config);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"advanced-check-methods",children:"Advanced Check Methods"}),"\n",(0,s.jsx)(n.p,{children:"Applitools offers several advanced check methods for specific scenarios:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Check a specific region\nawait eyes.check('Login Form', Target.region('#login-form'));\n\n// Check multiple regions\nawait eyes.check(\n  'Critical Elements',\n  Target.regions([\n    { type: 'css', selector: '#header' },\n    { type: 'css', selector: '#footer' },\n  ])\n);\n\n// Strict region\nawait eyes.check('Exact Header', Target.region('#header').strict());\n\n// Floating region\nawait eyes.check(\n  'Floating Button',\n  Target.region('#floating-button').floating()\n);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"handling-dynamic-content",children:"Handling Dynamic Content"}),"\n",(0,s.jsx)(n.p,{children:"For pages with dynamic content, you can use various strategies:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Ignore specific regions\nawait eyes.check(\n  'Dynamic Page',\n  Target.window().ignoreRegions('#dynamic-ad', '.timestamp')\n);\n\n// Use layout match level for specific regions\nawait eyes.check(\n  'Semi-Dynamic Page',\n  Target.window().layout('#user-greeting').strict('#static-content')\n);\n\n// Ignore colors\nawait eyes.check('Color Insensitive', Target.window().ignoreColors());\n"})}),"\n",(0,s.jsx)(n.h2,{id:"working-with-iframes",children:"Working with Iframes"}),"\n",(0,s.jsx)(n.p,{children:"You can check content within iframes:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"await eyes.check(\n  'Iframe Content',\n  Target.frame('frame-name').region('#content-in-iframe')\n);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"custom-viewport-sizes-and-devices",children:"Custom Viewport Sizes and Devices"}),"\n",(0,s.jsx)(n.p,{children:"Test your application on various devices and viewport sizes:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import { devices } from '@playwright/test';\n\n// Use Playwright's predefined devices\nawait page.emulate(devices['iPhone 11']);\nawait eyes.check('iPhone 11 View', Target.window().fully());\n\n// Custom viewport size\nawait page.setViewportSize({ width: 1280, height: 720 });\nawait eyes.check('Custom Viewport', Target.window().fully());\n"})}),"\n",(0,s.jsx)(n.h2,{id:"using-the-ultrafast-grid",children:"Using the Ultrafast Grid"}),"\n",(0,s.jsx)(n.p,{children:"Leverage Applitools Ultrafast Grid for cross-browser testing:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import {\n  Configuration,\n  BrowserType,\n  ScreenOrientation,\n  DeviceName,\n} from '@applitools/eyes-playwright';\n\nconst config = new Configuration();\nconfig.addBrowser(800, 600, BrowserType.CHROME);\nconfig.addBrowser(700, 500, BrowserType.FIREFOX);\nconfig.addDevice(DeviceName.iPhone_X, ScreenOrientation.PORTRAIT);\n\nconst eyes = new Eyes(config);\n\n// Your test code here\n"})}),"\n",(0,s.jsx)(n.h2,{id:"visual-locators",children:"Visual Locators"}),"\n",(0,s.jsx)(n.p,{children:"Use AI-powered visual locators to find elements:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const locator = await eyes.getLocator({ name: 'Submit Button' });\nawait page.click(locator);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"accessibility-testing",children:"Accessibility Testing"}),"\n",(0,s.jsx)(n.p,{children:"Combine visual testing with accessibility checks:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"await eyes.check(\n  'Accessibility Check',\n  Target.window()\n    .fully()\n    .accessibilityValidation({ level: 'AA', guidelinesVersion: 'WCAG_2_0' })\n);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"handling-popups-and-new-windows",children:"Handling Popups and New Windows"}),"\n",(0,s.jsx)(n.p,{children:"Test scenarios involving popups or new windows:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"test('Popup Test', async ({ page }) => {\n  await eyes.open(page, 'My App', 'Popup Test');\n\n  const [popup] = await Promise.all([\n    page.waitForEvent('popup'),\n    page.click('#open-popup'),\n  ]);\n\n  await eyes.check('Main Page', Target.window().fully());\n\n  await popup.waitForLoadState();\n  await eyes.check('Popup Content', Target.window().fully(), { page: popup });\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"advanced-error-handling",children:"Advanced Error Handling"}),"\n",(0,s.jsx)(n.p,{children:"Implement sophisticated error handling and reporting:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"try {\n  // Your test code here\n} catch (error) {\n  console.error('Test error:', error);\n  throw error;\n} finally {\n  const results = await eyes.getRunner().getAllTestResults();\n  console.log(results.toString());\n\n  if (results.getUnresolvedCount() > 0) {\n    throw new Error('Visual differences found');\n  }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"These advanced techniques will help you create more robust and comprehensive visual tests with Applitools Eyes and Playwright. Remember to consult the Applitools API documentation for the most up-to-date information on available methods and options."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var s=i(6540);const t={},a=s.createContext(t);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);