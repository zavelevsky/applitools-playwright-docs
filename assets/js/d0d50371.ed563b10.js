"use strict";(self.webpackChunkapplitools_playwright_docs=self.webpackChunkapplitools_playwright_docs||[]).push([[5493],{786:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var s=n(4848),i=n(8453);const o={},r="Integration with Playwright",a={id:"integration-with-playwright",title:"Integration with Playwright",description:"In this section, we'll explore how to seamlessly integrate Applitools Eyes into your Playwright tests. You'll learn how to use the SDK within your tests, customize configurations, and work with Page Object Models (POMs) to enhance your visual testing strategy.",source:"@site/docs/integration-with-playwright.md",sourceDirName:".",slug:"/integration-with-playwright",permalink:"/applitools-playwright-docs/docs/integration-with-playwright",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Introduction",permalink:"/applitools-playwright-docs/docs/introduction"},next:{title:"Core Concepts",permalink:"/applitools-playwright-docs/docs/core-concepts"}},l={},c=[{value:"Using the SDK with Playwright tests",id:"using-the-sdk-with-playwright-tests",level:2},{value:"Importing Applitools modules",id:"importing-applitools-modules",level:3},{value:"Accessing the <code>eyes</code> object",id:"accessing-the-eyes-object",level:4},{value:"Visual checkpoints",id:"visual-checkpoints",level:3},{value:"Using <code>eyes.check()</code>",id:"using-eyescheck",level:4},{value:"Best practices",id:"best-practices",level:3},{value:"Enhanced HTML report",id:"enhanced-html-report",level:2},{value:"Setup and run the report",id:"setup-and-run-the-report",level:3},{value:"Benefits of the enhanced report",id:"benefits-of-the-enhanced-report",level:3},{value:"Reviewing visual test results",id:"reviewing-visual-test-results",level:3},{value:"Accepting or rejecting changes",id:"accepting-or-rejecting-changes",level:4},{value:"Viewing the report without logging in",id:"viewing-the-report-without-logging-in",level:4},{value:"Logging in to Applitools Eyes",id:"logging-in-to-applitools-eyes",level:4},{value:"Sharing the report",id:"sharing-the-report",level:3},{value:"Advanced configuration",id:"advanced-configuration",level:2},{value:"Overriding default behaviors",id:"overriding-default-behaviors",level:3},{value:"Examples of global settings",id:"examples-of-global-settings",level:4},{value:"Working with Page Object Models (POMs)",id:"working-with-page-object-models-poms",level:2}];function h(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"integration-with-playwright",children:"Integration with Playwright"})}),"\n",(0,s.jsx)(t.p,{children:"In this section, we'll explore how to seamlessly integrate Applitools Eyes into your Playwright tests. You'll learn how to use the SDK within your tests, customize configurations, and work with Page Object Models (POMs) to enhance your visual testing strategy."}),"\n",(0,s.jsx)(t.h2,{id:"using-the-sdk-with-playwright-tests",children:"Using the SDK with Playwright tests"}),"\n",(0,s.jsx)(t.h3,{id:"importing-applitools-modules",children:"Importing Applitools modules"}),"\n",(0,s.jsxs)(t.p,{children:["To access Applitools features, import ",(0,s.jsx)(t.code,{children:"test"})," from ",(0,s.jsx)(t.code,{children:"@applitools/eyes-playwright"})," in your test files:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"import { test } from '@applitools/eyes-playwright';\n"})}),"\n",(0,s.jsxs)(t.p,{children:["This replaces the default Playwright ",(0,s.jsx)(t.code,{children:"test"})," function with Applitools-enhanced version that supports visual testing."]}),"\n",(0,s.jsxs)(t.h4,{id:"accessing-the-eyes-object",children:["Accessing the ",(0,s.jsx)(t.code,{children:"eyes"})," object"]}),"\n",(0,s.jsxs)(t.p,{children:["The extended ",(0,s.jsx)(t.code,{children:"test"})," object provides access to the ",(0,s.jsx)(t.code,{children:"eyes"})," object within your test, enabling direct use of Applitools methods:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"test('Visual test using eyes.check()', async ({ page, eyes }) => {\n  await page.goto('https://example.com');\n\n  // Visual checkpoint of the full page using the `Strict` match level\n  await eyes.check('Homepage', {\n    fully: true,\n    matchLevel: 'Strict',\n  });\n});\n"})}),"\n",(0,s.jsx)(t.h3,{id:"visual-checkpoints",children:"Visual checkpoints"}),"\n",(0,s.jsxs)(t.h4,{id:"using-eyescheck",children:["Using ",(0,s.jsx)(t.code,{children:"eyes.check()"})]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"eyes.check()"})," method allows you to capture visual checkpoints with more explicit control. You can specify parameters such as the checkpoint name, match level, and regions to ignore."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Example:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"test('Visual test using eyes.check()', async ({ page, eyes }) => {\n  await page.goto('https://example.com');\n\n  // Visual checkpoint with custom settings\n  await eyes.check('Homepage', {\n    // Capture the full page\n    fully: true,\n    // Set match level\n    matchLevel: 'Strict',\n    // Ignore dynamic content\n    ignoreRegions: [page.locator('.dynamic-content')],\n  });\n});\n"})}),"\n",(0,s.jsx)(t.h3,{id:"best-practices",children:"Best practices"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Descriptive checkpoint names"}),": Provide meaningful names to your ",(0,s.jsx)(t.code,{children:"eyes.check()"})," calls for easy identification in the Applitools Dashboard."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Use contextual settings"}),": Adjust settings like ",(0,s.jsx)(t.code,{children:"matchLevel"})," and ",(0,s.jsx)(t.code,{children:"ignoreRegions"})," based on the specific content being tested."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Use textual assertions only when necessary"}),": Use ",(0,s.jsx)(t.code,{children:"eyes.check()"})," to assert appearance and every functionality that has a visual aspect, thus reducing your test code by 80%. Leave only those textual assertions needed to validate certain dynamic aspects that require programmatic evaluation."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Encapsulate Visual Checks"}),": Keep visual checkpoints within relevant page object methods or custom fixtures for better organization."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"enhanced-html-report",children:"Enhanced HTML report"}),"\n",(0,s.jsx)(t.p,{children:"When integrating Applitools Eyes into your Playwright tests, you gain access to an enhanced HTML report that provides detailed visual test results. This report extends Playwright's default HTML report with Applitools' visual testing insights, making it a powerful tool for reviewing and sharing test outcomes."}),"\n",(0,s.jsx)(t.h3,{id:"setup-and-run-the-report",children:"Setup and run the report"}),"\n",(0,s.jsxs)(t.p,{children:["To enable the enhanced HTML report, update your ",(0,s.jsx)(t.code,{children:"playwright.config.ts"})," file with the following settings:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"// playwright.config.ts\nimport { defineConfig } from '@playwright/test';\nimport { EyesFixture } from '@applitools/eyes-playwright';\n\nexport default defineConfig<EyesFixture>({\n  // Other Playwright configurations...\n  reporter: '@applitools/eyes-playwright/reporter',\n  // Additional configurations...\n});\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"Note: If you used the Applitools CLI setup tool, this change may have already been made for you."})}),"\n",(0,s.jsx)(t.p,{children:"After running your tests, you can view the test results in the enhanced HTML report. To open the report, run:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"npx playwright show-report\n"})}),"\n",(0,s.jsx)(t.h3,{id:"benefits-of-the-enhanced-report",children:"Benefits of the enhanced report"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Lightweight and shareable"}),": The enhanced Applitools HTML report is lightweight and can be easily shared. You can commit it to source control or send it as an email attachment without worrying about large file sizes."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Standalone viewing"}),": You don't need to be logged in to Applitools Eyes or even have an Applitools account to view the test results, checkpoint images, and diffs. This makes it convenient for team members or stakeholders who don't have access to Applitools."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Always up-to-date"}),": The report remains up to date with the latest batch resolution, ensuring that you always have the most current information at your fingertips."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"report main page",src:n(4837).A+"",width:"1980",height:"1338"})}),"\n",(0,s.jsx)(t.h3,{id:"reviewing-visual-test-results",children:"Reviewing visual test results"}),"\n",(0,s.jsx)(t.p,{children:"The enhanced report offers several helpful features to view and address visual test results:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Visual diffs"}),": Easily identify differences between the baseline and the current test run with side-by-side comparisons and highlighted changes."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Accepting or rejecting changes"}),": If intentional changes were made, you can accept them directly in the report. If unexpected differences are found, you can reject them to flag the test for further investigation."]}),"\n"]}),"\n",(0,s.jsx)(t.h4,{id:"accepting-or-rejecting-changes",children:"Accepting or rejecting changes"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Accept"}),": Accepting changes means you ",(0,s.jsx)(t.strong,{children:"accept and save the new checkpoint as the baseline image"}),". This updates the baseline image for future test runs."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Reject"}),": Rejecting changes indicates that the differences are unintended and need to be addressed."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"report diffs",src:n(7568).A+"",width:"1956",height:"1792"})}),"\n",(0,s.jsx)(t.h4,{id:"viewing-the-report-without-logging-in",children:"Viewing the report without logging in"}),"\n",(0,s.jsx)(t.p,{children:"You can view test results, checkpoint images, and diffs without being logged in to Applitools Eyes or even having an Applitools account."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"Note: For security reasons, baseline images are not displayed when not logged in, and accepting or rejecting changes requires authentication."})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"report logged out",src:n(9955).A+"",width:"1966",height:"1790"})}),"\n",(0,s.jsx)(t.h4,{id:"logging-in-to-applitools-eyes",children:"Logging in to Applitools Eyes"}),"\n",(0,s.jsx)(t.p,{children:"When you attempt to accept or reject changes without being logged in, the report will prompt you to log in. This ensures that only authorized users can modify baselines."}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Security explanation"}),": Baseline images and the ability to modify them are protected to prevent unauthorized changes, maintaining the integrity of your visual tests."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"report logging in",src:n(3199).A+"",width:"1966",height:"1794"})}),"\n",(0,s.jsx)(t.h3,{id:"sharing-the-report",children:"Sharing the report"}),"\n",(0,s.jsx)(t.p,{children:"Since the enhanced HTML report is lightweight and self-contained, you can easily share it with others:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Commit to source control"}),": Add the report to your version control system to keep a history of test runs and results."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Share the file"}),": Send the report file directly to team members or stakeholders who need to review the test results."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"No dependencies"}),": Recipients of the report don't need any special software or access to Applitools Eyes to view the report. They can open it in any modern web browser."]}),"\n",(0,s.jsx)(t.h2,{id:"advanced-configuration",children:"Advanced configuration"}),"\n",(0,s.jsx)(t.p,{children:"You can pass various options both capture methods in order to customize the behavior:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"fully"})}),": Capture the full page when set to ",(0,s.jsx)(t.code,{children:"true"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"region"})}),": Define a specific region or element to capture."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"matchLevel"})}),": Set the match level, which determines the way by which Eyes compares the checkpoint image with the baseline image. 'Strict' is the recommended value."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"ignoreRegions"})}),": Specify regions to ignore during comparison."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"floatingRegions"})}),": Define floating regions for containers of elements that may move."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"IgnoreDisplacements"})}),": suppresses differences caused by elements shifting positions."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Example: Capturing a specific element"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"test('Element visual test using eyes.check()', async ({ page, eyes }) => {\n  await page.goto('https://example.com');\n\n  const navbar = page.locator('.navbar');\n\n  // Visual checkpoint of a specific element\n  await eyes.check('Navbar', {\n    region: navbar,\n    matchLevel: 'Layout',\n  });\n});\n"})}),"\n",(0,s.jsx)(t.h3,{id:"overriding-default-behaviors",children:"Overriding default behaviors"}),"\n",(0,s.jsxs)(t.p,{children:["You can adjust global settings in your ",(0,s.jsx)(t.code,{children:"playwright.config.ts"})," file using ",(0,s.jsx)(t.code,{children:"eyesConfig"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"// playwright.config.ts\nimport { EyesFixture } from '@applitools/eyes-playwright;\nexport default defineConfig<EyesFixture> ({\n  use: {\n    eyesConfig: {\n      appName: 'My App',\n      failTestsOnDiff: 'afterEach', // Options: 'afterEach', 'afterAll', false\n    },\n  },\n});\n"})}),"\n",(0,s.jsx)(t.h4,{id:"examples-of-global-settings",children:"Examples of global settings"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"apiKey"}),": Default Applitools API key for all tests."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"appName"}),": Default application name to use."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"batch"}),": Sets the BatchInfo for grouping tests."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"failTestsOnDiff"}),": Controls when to throw exceptions on visual differences."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"working-with-page-object-models-poms",children:"Working with Page Object Models (POMs)"}),"\n",(0,s.jsxs)(t.p,{children:["Integrating ",(0,s.jsx)(t.code,{children:"eyes"})," within your Page Object Models helps maintain clean and organized test code."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Example:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"// page-objects/LoginPage.js\nclass LoginPage {\n  constructor(eyes, page) {\n    this.eyes = eyes;\n    this.page = page;\n    this.usernameInput = page.locator('#username');\n    this.passwordInput = page.locator('#password');\n    this.loginButton = page.locator('#login');\n  }\n\n  async navigate() {\n    await this.page.goto('https://example.com/login');\n  }\n\n  async login(username, password) {\n    await this.usernameInput.fill(username);\n    await this.passwordInput.fill(password);\n    await this.loginButton.click();\n  }\n\n  async verifyLoginPage() {\n    await this.eyes.check('Login Page', {\n      fully: true,\n    });\n  }\n}\n\nmodule.exports = { LoginPage };\n"})}),"\n",(0,s.jsx)(t.p,{children:"Usage in the test:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"// tests/login.test.js\nimport { test } from '@applitools/eyes-playwright';\nconst { LoginPage } = require('../page-objects/LoginPage');\n\ntest('Login page visual test using eyes.check()', async ({ page, eyes }) => {\n  const loginPage = new LoginPage(eyes, page);\n  await loginPage.navigate();\n\n  // Visual checkpoint within the page object\n  await loginPage.verifyLoginPage();\n});\n"})})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},9955:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/report-logged-out-43bff0f50f812fd9c0459b2bae2ae21e.png"},3199:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/report-logging-in-5ecf4d8d0328a7863285337cd3af14dc.png"},4837:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/report-main-page-da58932a4dbead1d1af7417f4202a913.png"},7568:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/report-visual-diff-bee5a74f7a690933148af2f204c4ec2b.png"},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var s=n(6540);const i={},o=s.createContext(i);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);