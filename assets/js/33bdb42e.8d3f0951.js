"use strict";(self.webpackChunkapplitools_playwright_docs=self.webpackChunkapplitools_playwright_docs||[]).push([[9862],{2203:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>d});var i=s(4848),r=s(8453);const c={},o="Using eyes.check in Tests",t={id:"api/eyes-check",title:"Using eyes.check in Tests",description:"The eyes object provided by the Applitools Eyes Playwright integration allows you to perform visual checkpoints using the eyes.check method. This method captures screenshots and compares them against their corresponding baselines.",source:"@site/docs/api/eyes-check.md",sourceDirName:"api",slug:"/api/eyes-check",permalink:"/applitools-playwright-docs/docs/api/eyes-check",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"Advanced Configuration",permalink:"/applitools-playwright-docs/docs/api/advanced-configuration"},next:{title:"Defining Regions",permalink:"/applitools-playwright-docs/docs/api/defining-regions"}},l={},d=[{value:"Importing <code>test</code> and using <code>eyes</code>",id:"importing-test-and-using-eyes",level:2},{value:"Performing visual checkpoints",id:"performing-visual-checkpoints",level:2},{value:"eyes.check method",id:"eyescheck-method",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Options for <code>eyes.check</code>",id:"options-for-eyescheck",level:3},{value:"Example usage",id:"example-usage",level:3}];function a(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"using-eyescheck-in-tests",children:"Using eyes.check in Tests"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"eyes"})," object provided by the Applitools Eyes Playwright integration allows you to perform visual checkpoints using the ",(0,i.jsx)(n.code,{children:"eyes.check"})," method. This method captures screenshots and compares them against their corresponding baselines."]}),"\n",(0,i.jsxs)(n.h2,{id:"importing-test-and-using-eyes",children:["Importing ",(0,i.jsx)(n.code,{children:"test"})," and using ",(0,i.jsx)(n.code,{children:"eyes"})]}),"\n",(0,i.jsxs)(n.p,{children:["In your test files, import ",(0,i.jsx)(n.code,{children:"test"})," from ",(0,i.jsx)(n.code,{children:"@applitools/eyes-playwright"})," instead of ",(0,i.jsx)(n.code,{children:"@playwright/test"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { test } from '@applitools/eyes-playwright';\n\ntest('Visual Test', async ({ page, eyes }) => {\n  // Your test code...\n});\n"})}),"\n",(0,i.jsxs)(n.p,{children:["To use Playwright's native ",(0,i.jsx)(n.code,{children:"expect.toHaveScreenshot"})," methods with Applitools Eyes, import ",(0,i.jsx)(n.code,{children:"expect"})," from ",(0,i.jsx)(n.code,{children:"@applitools/eyes-playwright"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { test, expect } from '@applitools/eyes-playwright';\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note"}),": Tests using Playwright's ",(0,i.jsx)(n.code,{children:"expect(page).toHaveScreenshot()"})," will work seamlessly with Applitools Eyes when imported from ",(0,i.jsx)(n.code,{children:"@applitools/eyes-playwright"}),". However, it is recommended to use ",(0,i.jsx)(n.code,{children:"eyes.check"})," for advanced visual testing features."]}),"\n",(0,i.jsx)(n.h2,{id:"performing-visual-checkpoints",children:"Performing visual checkpoints"}),"\n",(0,i.jsxs)(n.p,{children:["Use ",(0,i.jsx)(n.code,{children:"eyes.check"})," within your tests to perform visual validations."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["You can use multiple ",(0,i.jsx)(n.code,{children:"eyes.check"})," calls within a single test."]}),"\n",(0,i.jsx)(n.li,{children:"The SDK automatically aligns and compares the checkpoints with the appropriate baseline steps."}),"\n",(0,i.jsx)(n.li,{children:"Newly added or removed checks are automatically identified and addressed."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"test('Multiple checkpoints', async ({ page, eyes }) => {\n  await page.goto('https://example.com');\n\n  // Check the home page\n  await eyes.check('Home Page', {\n    fully: true,\n  });\n\n  // Navigate and check another page\n  await page.click('.dashboard-link');\n  await eyes.check('Dashboard', {\n    matchLevel: 'Layout',\n  });\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"eyescheck-method",children:"eyes.check method"}),"\n",(0,i.jsx)(n.h3,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"await eyes.check(name?, options?);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"name"})})," (string, optional):",(0,i.jsx)(n.br,{}),"\n","The name of the checkpoint. This name appears in the HTML report and in the Applitools Dashboard."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"options"})})," (object, optional):",(0,i.jsx)(n.br,{}),"\n","Configuration options for the visual checkpoint."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"options-for-eyescheck",children:["Options for ",(0,i.jsx)(n.code,{children:"eyes.check"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"region"})})," (string | object):",(0,i.jsx)(n.br,{}),"\n","Specifies a region of the page to capture."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Selector"}),":",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"region: '#header',"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Playwright Locator"}),":",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"region: page.locator('.content-section'),"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Coordinates"})}),(0,i.jsx)(n.code,{children:":"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"{ x: 100, y: 200, height: 50, width: 150 },"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"frames"})})," (array):",(0,i.jsx)(n.br,{}),"\n","Specifies frames to capture."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"frames: ['#main-frame', { frame: page.frame('sub-frame') }],"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"matchLevel"})})," (string):",(0,i.jsx)(n.br,{}),"\n","Overrides the match level for this checkpoint.",(0,i.jsx)(n.br,{}),"\n","Possible values: ",(0,i.jsx)(n.code,{children:"'Strict'"}),", ",(0,i.jsx)(n.code,{children:"'Layout'"}),", ",(0,i.jsx)(n.code,{children:"'IgnoreColors'"}),", ",(0,i.jsx)(n.code,{children:"'Dynamic'"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"matchLevel: 'Layout',"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"ignoreRegions"})})," (array):",(0,i.jsx)(n.br,{}),"\n","Regions to ignore during visual comparison."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"ignoreRegions: [\n  page.locator('.dynamic-banner'),\n  { x: 100, y: 200, width: 300, height: 50 },\n],\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"layoutRegions"})}),", ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"strictRegions"})}),", ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"dynamicRegions"})}),", ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"contentRegions"})}),", ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"floatingRegions"})}),":",(0,i.jsx)(n.br,{}),"\n","Regions with specific match levels or behaviors."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"layoutRegions: [page.locator('.sidebar')],\nfloatingRegions: [\n  {\n    region: page.locator('.floating-button'),\n    maxUpOffset: 10,\n    maxDownOffset: 10,\n    maxLeftOffset: 5,\n    maxRightOffset: 5,\n  },\n],\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"accessibilityRegions"})})," (array):",(0,i.jsx)(n.br,{}),"\n","Regions with specific accessibility levels."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"  accessibilityRegions: [\n    {\n      region: page.locator('.important-text'),\n      type: 'LargeText',\n    },\n  ],\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"fully"})})," (boolean):",(0,i.jsx)(n.br,{}),"\n","If ",(0,i.jsx)(n.code,{children:"true"}),", captures a full-page screenshot."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"fully: true,"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"scrollRootElement"})})," (string | object):",(0,i.jsx)(n.br,{}),"\n","Overrides the global ",(0,i.jsx)(n.code,{children:"scrollRootElement"})," for this checkpoint."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"  scrollRootElement: '#content',\n  // Or using a locator:\n  scrollRootElement: page.locator('#content'),\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"hooks"})})," (object):",(0,i.jsx)(n.br,{}),"\n","JavaScript code to run before capturing the screenshot."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"  hooks: {\n    beforeCaptureScreenshot: \"document.querySelector('#ad-banner').style.display = 'none';\",\n  },\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"waitBeforeCapture"})})," (number):",(0,i.jsx)(n.br,{}),"\n","Time in milliseconds to wait before capturing the screenshot."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"waitBeforeCapture: 500,"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"sendDom"})})," (boolean):",(0,i.jsx)(n.br,{}),"\n","If ",(0,i.jsx)(n.code,{children:"true"}),", sends the DOM snapshot along with the screenshot."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"sendDom: true,"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"useDom"})})," (boolean):",(0,i.jsx)(n.br,{}),"\n","If ",(0,i.jsx)(n.code,{children:"true"}),", uses the DOM information to assist in visual comparisons."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"useDom: true,"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"enablePatterns"})})," (boolean):",(0,i.jsx)(n.br,{}),"\n","Enables pattern matching in visual comparisons for this checkpoint."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"enablePatterns: true,"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"ignoreDisplacements"})})," (boolean):",(0,i.jsx)(n.br,{}),"\n","If ",(0,i.jsx)(n.code,{children:"true"}),", ignores vertical shifts in content during visual comparisons. It is useful for reducing diff noise when the UI changes frequently."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"ignoreDisplacements: true,"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"ignoreCaret"})})," (boolean):",(0,i.jsx)(n.br,{}),"\n","If ",(0,i.jsx)(n.code,{children:"true"}),", ignores the blinking caret in text inputs during visual comparisons."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"ignoreCaret: true,"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"layoutBreakpoints"})})," (boolean | number[]):",(0,i.jsx)(n.br,{}),"\n","Enables responsive design testing at specified breakpoints."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"true"}),", breakpoints are inferred from the application's CSS."]}),"\n",(0,i.jsx)(n.li,{children:"If an array of numbers, specifies the widths at which to capture screenshots"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note"}),": This option is relevant only for UFG. It allows the SDK to fetch viewport-specific resources, which are subsequently used for rendering on the UFG. This is rarely needed, but when necessary, it's crucial for accurate rendering."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"layoutBreakpoints: [320, 768, 1024],\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"visualGridOptions"})})," (object):",(0,i.jsx)(n.br,{}),"\n","Additional options for the Ultrafast Grid rendering."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"chromeHeadless"})})," (boolean):",(0,i.jsx)(n.br,{}),"\n","Set to ",(0,i.jsx)(n.code,{children:"false"})," to use regular Chrome instead of Headless Chrome."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"polyfillAdoptedStyleSheets"})})," (boolean):",(0,i.jsx)(n.br,{}),"\n","Controls the polyfill for Adopted StyleSheets."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"visualGridOptions: {\n  chromeHeadless: false,\n  polyfillAdoptedStyleSheets: true,\n},\n"})}),"\n",(0,i.jsx)(n.h3,{id:"example-usage",children:"Example usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"test('Visual Test with Regions', async ({ page, eyes }) => {\n  await page.goto('https://example.com');\n\n  await eyes.check('Main Page', {\n    fully: true,\n    matchLevel: 'Strict',\n    ignoreRegions: [page.locator('.dynamic-content')],\n    layoutRegions: [page.locator('.sidebar')],\n    floatingRegions: [\n      {\n        region: page.locator('.floating-ad'),\n        maxUpOffset: 10,\n        maxDownOffset: 10,\n        maxLeftOffset: 5,\n        maxRightOffset: 5,\n      },\n    ],\n    accessibilityRegions: [\n      {\n        region: page.locator('.important-heading'),\n        type: 'BoldText',\n      },\n    ],\n    hooks: {\n      beforeCaptureScreenshot:\n        \"document.querySelector('.modal').style.display = 'none';\",\n    },\n    waitBeforeCapture: 1000,\n  });\n});\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>t});var i=s(6540);const r={},c=i.createContext(r);function o(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);