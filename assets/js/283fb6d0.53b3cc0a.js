"use strict";(self.webpackChunkapplitools_playwright_docs=self.webpackChunkapplitools_playwright_docs||[]).push([[4054],{8286:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>a});var i=s(4848),r=s(8453);const t={},o="Configuration Options",c={id:"api/common-configuration",title:"Configuration Options",description:"This section describes all available configuration options for Applitools Eyes when using it with Playwright. The configuration is set in your playwright.config.ts file under the eyesConfig property.",source:"@site/docs/api/common-configuration.md",sourceDirName:"api",slug:"/api/common-configuration",permalink:"/applitools-playwright-docs/docs/api/common-configuration",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"Overview",permalink:"/applitools-playwright-docs/docs/api/overview"},next:{title:"Runner Configuration",permalink:"/applitools-playwright-docs/docs/api/runner-configuration"}},l={},a=[{value:"Common Configuration Options",id:"common-configuration-options",level:2},{value:"Authentication and Server Configuration",id:"authentication-and-server-configuration",level:3},{value:"Test and Application Identification",id:"test-and-application-identification",level:3},{value:"Batch Configuration",id:"batch-configuration",level:3},{value:"Branching and Baseline Management",id:"branching-and-baseline-management",level:3},{value:"Visual Comparison Settings",id:"visual-comparison-settings",level:3},{value:"Exception Handling Configuration",id:"exception-handling-configuration",level:3},{value:"Viewport Configuration",id:"viewport-configuration",level:3}];function d(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"configuration-options",children:"Configuration Options"})}),"\n",(0,i.jsxs)(n.p,{children:["This section describes all available configuration options for Applitools Eyes when using it with Playwright. The configuration is set in your ",(0,i.jsx)(n.code,{children:"playwright.config.ts"})," file under the ",(0,i.jsx)(n.code,{children:"eyesConfig"})," property."]}),"\n",(0,i.jsx)(n.h2,{id:"common-configuration-options",children:"Common Configuration Options"}),"\n",(0,i.jsx)(n.p,{children:"These options apply to both Ultrafast Grid (UFG) and Classic runners. Runner-specific options are listed in the dedicated section."}),"\n",(0,i.jsx)(n.h3,{id:"authentication-and-server-configuration",children:"Authentication and Server Configuration"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"apiKey"})})," (string):",(0,i.jsx)(n.br,{}),"\n","Your Applitools API key. This key authenticates your account and is required for all interactions with the Applitools Eyes server."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": Reads from the ",(0,i.jsx)(n.code,{children:"APPLITOOLS_API_KEY"})," environment variable if not specified."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"apiKey: 'YOUR_API_KEY',\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"serverUrl"})})," (string):",(0,i.jsx)(n.br,{}),"\n","The URL of the Applitools Eyes server. Use this if you are connecting to a dedicated cloud instance or an on-premises server."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": ",(0,i.jsx)(n.code,{children:"'https://eyesapi.applitools.com'"})," (Applitools public cloud server)"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"serverUrl: 'https://eyesapi.applitools.com',\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"proxy"})})," (object):",(0,i.jsx)(n.br,{}),"\n","Proxy settings if your network requires a proxy to access the Applitools Eyes server."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": No proxy is used if unspecified."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"proxy: {\n  url: 'http://proxy.example.com:8080',\n  username: 'proxyUser',\n  password: 'proxyPass',\n},\n"})}),"\n",(0,i.jsx)(n.h3,{id:"test-and-application-identification",children:"Test and Application Identification"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"appName"})})," (string):",(0,i.jsx)(n.br,{}),"\n","The name of your application under test. This name groups tests related to the same application in the Applitools Dashboard."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": set to ",(0,i.jsx)(n.code,{children:"'My App'"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"appName: 'My Application',\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"testName"})})," (string | function):",(0,i.jsx)(n.br,{}),"\n","The name of the test case. Can be a string or a function that receives ",(0,i.jsx)(n.code,{children:"testInfo"})," and returns a string."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": The test title path (e.g., ",(0,i.jsx)(n.code,{children:"'Suite > Test Name'"}),")."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"testName: 'Login Page Test',\n// Or using a function:\ntestName: (testInfo) => `Test: ${testInfo.title}`,\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"properties"})})," (array):",(0,i.jsx)(n.br,{}),"\n","Custom key-value pairs associated with the test."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"properties: [\n  { name: 'Environment', value: 'Staging' },\n  { name: 'Version', value: '1.0.0' },\n],\n"})}),"\n",(0,i.jsx)(n.h3,{id:"batch-configuration",children:"Batch Configuration"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"batch"})})," (object):",(0,i.jsx)(n.br,{}),"\n","Defines the batch to which the tests belong. Batches group related tests together in the Applitools Dashboard."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": A new batch is created for each test run with a unique ID."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"id"})})," (string):",(0,i.jsx)(n.br,{}),"\n","Unique identifier for the batch. If not specified, a unique ID is generated."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"name"})})," (string):",(0,i.jsx)(n.br,{}),"\n","Name of the batch."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"sequenceName"})})," (string):",(0,i.jsx)(n.br,{}),"\n","Sequence name for batch ordering, tracking batch execution statistics over time."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"notifyOnCompletion"})})," (boolean):",(0,i.jsx)(n.br,{}),"\n","If ",(0,i.jsx)(n.code,{children:"true"}),", sends a notification when the batch completes.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Note:"})," this feature requires an extra set-up step, as detailed ",(0,i.jsx)(n.a,{href:"https://applitools.com/docs/features/batch-completion-notifications.html",children:"here"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"batch: {\n  id: 'batch-id-123',\n  name: 'Regression Tests',\n  notifyOnCompletion: true,\n},\n"})}),"\n",(0,i.jsx)(n.h3,{id:"branching-and-baseline-management",children:"Branching and Baseline Management"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"branchName"})})," (string):",(0,i.jsx)(n.br,{}),"\n","The branch name in your version control system. Used for baseline branching in Applitools."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": ",(0,i.jsx)(n.code,{children:"'default'"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"branchName: 'feature/login-page',\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"parentBranchName"})})," (string):",(0,i.jsx)(n.br,{}),"\n","The parent branch name, typically your main or master branch. Baseline not found in your branch will be taken from the parent branch"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": Not set."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"parentBranchName: 'main',\n"})}),"\n",(0,i.jsx)(n.h3,{id:"visual-comparison-settings",children:"Visual Comparison Settings"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"matchLevel"})})," (string):",(0,i.jsx)(n.br,{}),"\n","The match level for visual comparisons. Determines how strictly images are compared."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": ",(0,i.jsx)(n.code,{children:"'Strict'"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Possible values:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"'Strict'"})," (default): Detects any meaningful differences visible to the human eye."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"'Layout'"}),": Ignores content changes but detects layout shifts."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"'IgnoreColors'"}),": Ignores style changes but detects content and layout changes."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"'Dynamic'"}),": Automatically ignores dynamic content that follows a consistent pattern, such as dates, email addresses or custom patterns."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"matchLevel: 'Strict',\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"ignoreDisplacements"})})," (boolean):",(0,i.jsx)(n.br,{}),"\n","If ",(0,i.jsx)(n.code,{children:"true"}),", ignores vertical shifts in content during visual comparisons. It is useful for reducing diff noise when the UI changes frequently."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"ignoreDisplacements: true,\n"})}),"\n",(0,i.jsx)(n.h3,{id:"exception-handling-configuration",children:"Exception Handling Configuration"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"failTestsOnDiff"})})," (string | boolean):",(0,i.jsx)(n.br,{}),"\n","Controls whether exceptions are thrown when visual differences are detected."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Possible values:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"'afterEach'"}),": Throws an exception after each test that has visual differences."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"'afterAll'"}),": Throws an exception after all tests have run if any visual differences are detected (more performant)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"false"})," (default): Does not throw exceptions for visual differences (best used with Applitools' Continuous Testing platform)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"failTestsOnDiff: 'afterEach',\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"afterAll"})})," (function):",(0,i.jsx)(n.br,{}),"\n","A callback function that receives the test results after all tests have run. Useful for custom reporting or processing."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": No callback is executed."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"afterAll: async (results) => {\n  for (const result of results) {\n    console.log(`Test: ${result.testResults.name}, URL: ${result.testResults.url}`);\n  }\n},\n"})}),"\n",(0,i.jsx)(n.h3,{id:"viewport-configuration",children:"Viewport Configuration"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"viewportSize"})})," (object):",(0,i.jsx)(n.br,{}),"\n","The viewport size for the browser where the test is executing. It may affect the resources downloaded to the browser."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": Playwright's default viewport size."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note"}),": This affects the local browser during test execution. For the Ultrafast Grid, viewport sizes specified in ",(0,i.jsx)(n.code,{children:"browsersInfo"})," determine the viewport sizes of the rendering browsers."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"`viewportSize: { width: 1280, height: 720 },`;\n"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var i=s(6540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);